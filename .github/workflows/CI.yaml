env:
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  TEAMCITY_FOUR_FOUR_URL: ${{ secrets.TEAMCITY_FOUR_FOUR_URL }}
  TEAMCITY_PASSWORD: ${{ secrets.TEAMCITY_PASSWORD }}
  TEAMCITY_USER: ${{ secrets.TEAMCITY_USER }}
jobs:
  code-ql:
    needs: compile
    permissions:
      actions: read
      security-events: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      uses: ./.github/actions/setup-jdk
    - continue-on-error: true
      uses: ./.github/actions/setup-gradle-cache
    - continue-on-error: true
      name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: java
    - continue-on-error: true
      name: Compile
      run: ./gradlew compileJava compileTestJava
    - continue-on-error: true
      name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
  compile:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      uses: ./.github/actions/setup-jdk
    - continue-on-error: true
      uses: ./.github/actions/setup-gradle-cache
    - continue-on-error: true
      name: Compile
      run: ./gradlew compileJava compileTestJava
  format-checks:
    needs: compile
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      uses: ./.github/actions/setup-jdk
    - continue-on-error: true
      uses: ./.github/actions/setup-gradle-cache
    - continue-on-error: true
      name: Check all the files are properly formatted
      run: ./gradlew spotlessCheck
  license-checks:
    needs: compile
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      uses: ./.github/actions/setup-jdk
    - continue-on-error: true
      uses: ./.github/actions/setup-gradle-cache
    - continue-on-error: true
      name: Check LICENSE and NOTICE files
      run: ./gradlew validateLicenses generateLicensesFiles
  tests:
    env:
      COMMUNITY_TAR: community-docker.tar
      DOCKER_COMMUNITY_FOUR_FOUR_URL: ${{ secrets.DOCKER_COMMUNITY_FOUR_FOUR_URL }}
      DOCKER_ENTERPRISE_FOUR_FOUR_URL: ${{ secrets.DOCKER_ENTERPRISE_FOUR_FOUR_URL
        }}
      ENTERPRISE_TAR: enterprise-docker.tar
    needs: compile
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      if: matrix.project == 'core-it' ||  matrix.project == 'full-it' ||  matrix.project
        == 'core'
      name: Download neo4j 4.4 docker container
      run: 'curl -s -L0 -u "${TEAMCITY_USER}:${TEAMCITY_PASSWORD}" -X GET ${DOCKER_ENTERPRISE_FOUR_FOUR_URL}
        -o ${ENTERPRISE_TAR} &

        curl -s -L0 -u "${TEAMCITY_USER}:${TEAMCITY_PASSWORD}" -X GET ${DOCKER_COMMUNITY_FOUR_FOUR_URL}
        -o ${COMMUNITY_TAR} &

        wait

        docker load --input ${ENTERPRISE_TAR}

        docker load --input ${COMMUNITY_TAR}

        '
    - continue-on-error: true
      name: Run ${{ matrix.project }} tests
      uses: ./.github/actions/test-gradle-project
      with:
        project-name: ${{ matrix.project }}
    strategy:
      fail-fast: false
      matrix:
        project:
        - core
        - full
        - processor
        - test-utils
        - core-it
        - full-it
name: CI
on:
  repository_dispatch:
    types: trigger-ga___CI.yaml
